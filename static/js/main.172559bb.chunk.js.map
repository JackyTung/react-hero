{"version":3,"sources":["utils/redux.js","constants/theme.js","redux/epics/index.js","redux/reducers/index.js","redux/stores/configureStore.js","routes/index.js","serviceWorker.js","styles/display.js","styles/flex.js","styles/position.js","styles/sizing.js","styles/text.js","index.js","styles/index.js","features/hero/index.js","api/backend.js","components/Progress/index.js"],"names":["slices","theme","palette","primary","main","secondary","border","error","button","sliceToEpics","slice","epics","actionTypes","Object","fromEntries","entries","filter","k","v","type","map","func","action$","state$","pipe","ofType","mergeMap","action","combineEpics","hero","isEmpty","flatten","combineReducers","epicMiddleware","createEpicMiddleware","configureStore","store","createStore","rootReducer","composeWithDevTools","trace","applyMiddleware","run","rootEpic","history","createBrowserHistory","HeroRouter","lazy","BaseRouter","basename","process","fallback","Progress","message","path","component","render","to","Boolean","window","location","hostname","match","display","flexDirection","justifyContent","alignItems","alignSelf","flexWrap","flexShrink","position","width","height","minWidth","minHeight","maxWidth","maxHeight","textAlign","overflow","whiteSpace","textOverflow","fontWeight","muiTheme","createMuiTheme","jss","setup","preset","createStyleSheet","html","body","fontFamily","margin","padding","a","textDecoration","color","outline","flex","sizing","text","meta","attach","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","initialState","sources","loaded","createSlice","name","reducers","getHeros","state","getHerosFulfilled","response","payload","getHerosCancelled","getHerosRejected","ajax","method","url","crossDomain","catchError","of","takeUntil","actions","className","classNames","style"],"mappings":"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","file":"static/js/main.172559bb.chunk.js","sourcesContent":["import { ofType } from 'redux-observable';\n\nimport flatten from 'lodash/flatten';\nimport isEmpty from 'lodash/isEmpty';\nimport { mergeMap } from 'rxjs/operators';\n\nconst sliceToEpics = slice => {\n  if (!slice || !slice.epics) {\n    return [];\n  }\n  const actionTypes = Object.fromEntries(\n    Object.entries(slice)\n      .filter(([k]) => k !== 'default' && k !== 'epics')\n      .filter(([, v]) => v && v.type)\n      .map(([k, v]) => [k, v.type]),\n  );\n  const epics = Object.entries(slice.epics).map(([k, func]) => (action$, state$) =>\n    action$.pipe(\n      ofType(actionTypes[k]),\n      mergeMap(action => func(action$, state$, action)),\n    ),\n  );\n  return epics;\n};\n\nexport const getEpicsFromSlices = slices => {\n  if (isEmpty(slices)) {\n    return [];\n  }\n  return flatten(slices.map(sliceToEpics));\n};\n","// #E8A87C\n// ##85DCB1\nconst theme = {\n  palette: {\n    primary: {\n      main: '#41B3A3',\n    },\n    secondary: {\n      main: '#C38D9E',\n    },\n    border: {\n      main: '#E8A87C',\n    },\n    error: {\n      main: '#E27D60',\n    },\n    button: {\n      main: '#84CEEB',\n    },\n  },\n};\n\nexport default theme;\n","import { combineEpics } from 'redux-observable';\n\nimport * as hero from '@/features/hero';\nimport { getEpicsFromSlices } from '@/utils/redux.js';\n\nexport default combineEpics(...getEpicsFromSlices([hero]));\n","import { combineReducers } from 'redux';\n\nimport hero from '@/features/hero';\n\nexport default combineReducers({\n  hero,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport rootEpic from '@/redux/epics';\nimport rootReducer from '@/redux/reducers';\n\nconst epicMiddleware = createEpicMiddleware();\nconst configureStore = () => {\n  const store = createStore(rootReducer, composeWithDevTools({ trace: true })(applyMiddleware(epicMiddleware)));\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n};\n\nexport default configureStore;\n","import React, { lazy, Suspense } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\n\nimport Progress from '@/components/Progress';\nimport configureStore from '@/redux/stores/configureStore';\n\nconst history = createBrowserHistory();\n\nconst HeroRouter = lazy(() => import('./hero'));\n\nconst store = configureStore();\n\nconst BaseRouter = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter history={history} basename={process.env.PUBLIC_URL}>\n        <Suspense fallback={<Progress message=\"Loading...\" />}>\n          <Switch>\n            <Route path=\"/heroes\" component={HeroRouter} />\n            <Route path=\"/\" render={() => <Redirect to=\"/heroes\" />} />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default BaseRouter;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  '.d-none': {\n    display: 'none',\n  },\n  '.d-inline': {\n    display: 'inline',\n  },\n  '.d-inline-block': {\n    display: 'inline-block',\n  },\n  '.d-block': {\n    display: 'block',\n  },\n  '.d-flex': {\n    display: 'flex',\n  },\n};\n","export default {\n  '.flex-row': {\n    flexDirection: 'row',\n  },\n  '.flex-row-rev': {\n    flexDirection: 'row-reverse',\n  },\n  '.flex-column': {\n    flexDirection: 'column',\n  },\n  '.flex-column-rev': {\n    flexDirection: 'column-reverse',\n  },\n  // justify-content\n  '.justify-start': {\n    justifyContent: 'flex-start',\n  },\n  '.justify-end': {\n    justifyContent: 'flex-end',\n  },\n  '.justify-center': {\n    justifyContent: 'center',\n  },\n  '.justify-space-between': {\n    justifyContent: 'space-between',\n  },\n  '.justify-space-around': {\n    justifyContent: 'space-around',\n  },\n  '.justify-space-evenly': {\n    justifyContent: 'space-evenly',\n  },\n  // align-items\n  '.align-start': {\n    alignItems: 'flex-start',\n  },\n  '.align-end': {\n    alignItems: 'flex-end',\n  },\n  '.align-center': {\n    alignItems: 'center',\n  },\n  '.align-stretch': {\n    alignItems: 'stretch',\n  },\n  '.align-baseline': {\n    alignItems: 'baseline',\n  },\n  // align-items\n  '.align-self-start': {\n    alignSelf: 'flex-start',\n  },\n  '.align-self-end': {\n    alignSelf: 'flex-end',\n  },\n  '.align-self-center': {\n    alignSelf: 'center',\n  },\n  '.align-self-stretch': {\n    alignSelf: 'stretch',\n  },\n  '.align-self-baseline': {\n    alignSelf: 'baseline',\n  },\n  // flex-wrap\n  '.flex-nowrap': {\n    flexWrap: 'nowrap',\n  },\n  '.flex-wrap': {\n    flexWrap: 'wrap',\n  },\n  '.flex-wrap-reverse': {\n    flexWrap: 'wrap-reverse',\n  },\n  '.flex-shrink-0': {\n    flexShrink: 0,\n  },\n};\n","export default {\n  '.position-static': {\n    position: 'static',\n  },\n  '.position-relative': {\n    position: 'relative',\n  },\n  '.position-absolute': {\n    position: 'absolute',\n  },\n  '.position-fixed': {\n    position: 'fixed',\n  },\n  '.position-sticky': {\n    position: 'sticky',\n  },\n};\n","export default {\n  '.w-100': {\n    width: '100%',\n  },\n  '.h-100': {\n    height: '100%',\n  },\n  '.vw-100': {\n    width: '100vw',\n  },\n  '.vh-100': {\n    height: '100vh',\n  },\n  '.min-vw-100': {\n    minWidth: '100vw',\n  },\n  '.min-vh-100': {\n    minHeight: '100vh',\n  },\n  '.max-vw-100': {\n    maxWidth: '100vw',\n  },\n  '.max-vh-100': {\n    maxHeight: '100vh',\n  },\n};\n","export default {\n  '.text-center': {\n    textAlign: 'center',\n  },\n  '.text-truncate': {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  '.text-bold': {\n    fontWeight: 500,\n  },\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport jss from 'jss';\nimport preset from 'jss-preset-default';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport theme from '@/constants/theme';\nimport App from './routes';\nimport * as serviceWorker from './serviceWorker';\nimport styles from './styles';\n\nconst muiTheme = createMuiTheme(theme);\n\n// create global styles\njss.setup(preset());\njss.createStyleSheet(styles(), { meta: 'global' }).attach();\n\nrender(\n  <ThemeProvider theme={muiTheme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import display from './display';\nimport flex from './flex';\nimport position from './position';\nimport sizing from './sizing';\nimport text from './text';\n\nexport default () => ({\n  '@global': {\n    html: {\n      height: '100%',\n      overflow: 'hidden',\n    },\n    body: {\n      height: '100%',\n      fontFamily: 'Roboto, Noto Sans TC, sans-serif',\n      '-webkit-font-smoothing': 'antialiased',\n    },\n    '#root': {\n      height: '100%',\n    },\n    'h1, h2, h3, h4, h5, h6, p': {\n      margin: 0,\n      padding: 0,\n    },\n    a: {\n      display: 'inline-block',\n      textDecoration: 'none',\n      color: 'inherit',\n    },\n    button: {\n      outline: 'none',\n      border: 'none',\n    },\n    ...display,\n    ...flex,\n    ...position,\n    ...sizing,\n    ...text,\n  },\n});\n","import { ofType } from 'redux-observable';\n\nimport { of } from 'rxjs';\nimport { catchError, map, takeUntil } from 'rxjs/operators';\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport * as backend from '@/api/backend';\n\nconst initialState = { sources: [], loaded: false };\n\nconst slice = createSlice({\n  name: 'hero',\n  initialState,\n  reducers: {\n    getHeros: (state, action) => {},\n    getHerosFulfilled: (state, action) => {\n      const { response } = action.payload;\n      state.sources = response;\n      state.loaded = true;\n    },\n    getHerosCancelled: () => initialState,\n    getHerosRejected: () => {},\n  },\n});\n\nexport const epics = {\n  getHeros: (action$, state$, action) => {\n    return backend.fetchHeros().pipe(\n      map(response => getHerosFulfilled(response)),\n      catchError(error => of(getHerosRejected(error))),\n      takeUntil(action$.pipe(ofType(getHerosCancelled.type))),\n    );\n  },\n};\n\nexport const { getHeros, getHerosFulfilled, getHerosCancelled, getHerosRejected } = slice.actions;\n\nexport default slice.reducer;\n","import { ajax } from 'rxjs/ajax';\n\nconst HEROS_ENDPOINT = 'https://hahow-recruit.herokuapp.com/heroes';\n\nexport const fetchHeros = () =>\n  ajax({\n    method: 'GET',\n    url: HEROS_ENDPOINT,\n    crossDomain: true,\n  });\n","import React from 'react';\n\nimport classNames from 'classnames';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Progress = ({ message, height }) => (\n  <div className={classNames('d-flex flex-column justify-center align-center vh-100')}>\n    <div style={{ height }}>\n      <CircularProgress />\n    </div>\n    {message && (\n      <>\n        <br />\n        <p>{message}</p>\n      </>\n    )}\n  </div>\n);\n\nexport default Progress;\n"],"sourceRoot":""}